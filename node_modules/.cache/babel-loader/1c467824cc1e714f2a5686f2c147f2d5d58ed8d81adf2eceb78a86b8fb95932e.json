{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactNewsMonkey\\\\newsmonkey\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinners from './Spinners';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResult] = useState(0);\n  // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=16541d3b22a74a0fa264fe176299cfb5&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(40);\n    let parsedData = await data.json();\n    props.setProgress(75);\n    console.log(parsedData);\n    setArticles(parsedData.articles);\n    setTotalResult(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  useEffect(() => {\n    updateNews();\n  }, []);\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=16541d3b22a74a0fa264fe176299cfb5&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResult(parsedData.totalResults);\n  };\n\n  // const handlePrevClick = async () => {\n  //     setPage(page - 1 )\n  //     updateNews();\n  // }\n  // const handleNextClick = async () => {\n  //     setPage(page + 1 )\n  //     updateNews();\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      style: {\n        marginTop: '100px'\n      },\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinners, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinners, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3 mt-3\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 \",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title.slice(0, 72) : '',\n                description: element.description ? element.description.slice(0, 120) : '',\n                imgUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"k6f3uKN5a5aX0FLdgvEtfStUICE=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 6,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Spinners","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResult","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","pageSize","data","fetch","parsedData","json","console","log","fetchMoreData","concat","children","className","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","title","description","imgUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","number","$RefreshReg$"],"sources":["G:/ReactNewsMonkey/newsmonkey/src/components/News.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinners from './Spinners'\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\n\r\nconst News = (props) => {\r\n    const [articles, setArticles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [totalResults, setTotalResult] = useState(0)\r\n    // document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n\r\n\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    const updateNews = async () => {\r\n        props.setProgress(10);\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=16541d3b22a74a0fa264fe176299cfb5&page=${page}&pageSize=${props.pageSize}`;\r\n        setLoading(true)\r\n        let data = await fetch(url);\r\n        props.setProgress(40);\r\n        let parsedData = await data.json();\r\n        props.setProgress(75);\r\n        console.log(parsedData)\r\n\r\n        setArticles(parsedData.articles)\r\n        setTotalResult(parsedData.totalResults)\r\n        setLoading(false)\r\n\r\n        props.setProgress(100);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateNews();\r\n    }, [])\r\n\r\n\r\n    const fetchMoreData = async () => {\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=16541d3b22a74a0fa264fe176299cfb5&page=${page+1}&pageSize=${props.pageSize}`;\r\n        setPage(page + 1)\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles))\r\n        setTotalResult(parsedData.totalResults)\r\n    };\r\n\r\n    // const handlePrevClick = async () => {\r\n    //     setPage(page - 1 )\r\n    //     updateNews();\r\n    // }\r\n    // const handleNextClick = async () => {\r\n    //     setPage(page + 1 )\r\n    //     updateNews();\r\n    // }\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center\" style={{ marginTop: '100px' }}>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines </h2>\r\n\r\n            {loading && <Spinners />}\r\n\r\n            <InfiniteScroll\r\n                dataLength={articles.length}\r\n                next={fetchMoreData}\r\n                hasMore={articles.length !== totalResults}\r\n                loader={<Spinners />}\r\n            >\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-3 mt-3\" >\r\n                        {articles.map((element) => {\r\n                            return <div className=\"col-md-4 \" key={element.url}>\r\n                                <NewsItem\r\n                                    title={element.title ? element.title.slice(0, 72) : ''}\r\n                                    description={element.description ? element.description.slice(0, 120) : ''}\r\n                                    imgUrl={element.urlToImage}\r\n                                    newsUrl={element.url}\r\n                                    author={element.author}\r\n                                    date={element.publishedAt}\r\n                                    source={element.source.name} />\r\n                                {/* We can use '.slice(0, 72)' to limit the display  */}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </InfiniteScroll>\r\n\r\n\r\n            {/* <div className=\"container\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                    <button disabled={page <= 1} type=\"button\" className=\"btn btn-primary\" onClick={handlePrevClick}>\r\n                            &larr; Previous\r\n                        </button>\r\n                        <button disabled={page >= Math.ceil(totalResults / props.pageSize)} type=\"button\" className=\"btn btn-primary\" onClick={handleNextClick}>\r\n                            Next &rarr;\r\n                        </button>\r\n\r\n                </div> */}\r\n        </ >\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nNews.defaultProps = {\r\n    country: 'in',\r\n    pageSize: 6,\r\n    category: 'general'\r\n\r\n}\r\nNews.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default News"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}